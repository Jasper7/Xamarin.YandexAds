using System;
using CoreGraphics;
using CoreLocation;
using Foundation;
using ObjCRuntime;
using UIKit;

namespace Xamarin.YandexAds.iOS
{
	// @interface YMAVASTMediaFile : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTMediaFile
	{
		// @property (readonly, copy, nonatomic) NSString * _Nullable ID;
		[NullAllowed, Export("ID")]
		string ID { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull URI;
		[Export("URI")]
		string URI { get; }

		// @property (readonly, assign, nonatomic) YMADeliveryMethod deliveryMethod;
		[Export("deliveryMethod", ArgumentSemantic.Assign)]
		YMADeliveryMethod DeliveryMethod { get; }

		// @property (readonly, assign, nonatomic) NSInteger width;
		[Export("width")]
		nint Width { get; }

		// @property (readonly, assign, nonatomic) NSInteger height;
		[Export("height")]
		nint Height { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull MIMEType;
		[Export("MIMEType")]
		string MIMEType { get; }

		// @property (readonly, assign, nonatomic) NSInteger bitRate;
		[Export("bitRate")]
		nint BitRate { get; }
	}

	// @protocol YMANativeBulkAdLoaderDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMANativeBulkAdLoaderDelegate
	{
		// @required -(void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didLoadAds:(NSArray<id<YMANativeAd>> * _Nonnull)ads;
		[Abstract]
		[Export("nativeBulkAdLoader:didLoadAds:")]
		void DidLoadAds(YMANativeBulkAdLoader nativeBulkAdLoader, YMANativeAd[] ads);

		// @required -(void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didFailLoadingWithError:(NSError * _Nonnull)error;
		[Abstract]
		[Export("nativeBulkAdLoader:didFailLoadingWithError:")]
		void DidFailLoadingWithError(YMANativeBulkAdLoader nativeBulkAdLoader, NSError error);
	}

	// @interface YMANativeBulkAdLoader : NSObject
	[BaseType(typeof(NSObject))]
	interface YMANativeBulkAdLoader
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMANativeBulkAdLoaderDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMANativeBulkAdLoaderDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)loadAdsWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration adsCount:(NSUInteger)adsCount;
		[Export("loadAdsWithRequestConfiguration:adsCount:")]
		void LoadAdsWithRequestConfiguration(YMANativeAdRequestConfiguration requestConfiguration, nuint adsCount);
	}

	// @interface YMAVASTCreative : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTCreative
	{
		// @property (readonly, copy, nonatomic) NSString * _Nullable ID;
		[NullAllowed, Export("ID")]
		string ID { get; }

		// @property (readonly, assign, nonatomic) NSInteger duration;
		[Export("duration")]
		nint Duration { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable clickThrough;
		[NullAllowed, Export("clickThrough")]
		string ClickThrough { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVASTMediaFile *> * _Nonnull mediaFiles;
		[Export("mediaFiles", ArgumentSemantic.Copy)]
		YMAVASTMediaFile[] MediaFiles { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVASTIcon *> * _Nonnull icons;
		[Export("icons", ArgumentSemantic.Copy)]
		YMAVASTIcon[] Icons { get; }

		// @property (readonly, nonatomic, strong) YMAVASTSkipOffset * _Nullable skipOffset;
		[NullAllowed, Export("skipOffset", ArgumentSemantic.Strong)]
		YMAVASTSkipOffset SkipOffset { get; }
	}

	// @interface YMANativeAdLoader : NSObject
	[BaseType(typeof(NSObject))]
	interface YMANativeAdLoader
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMANativeAdLoaderDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMANativeAdLoaderDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)loadAdWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration;
		[Export("loadAdWithRequestConfiguration:")]
		void LoadAdWithRequestConfiguration(YMANativeAdRequestConfiguration requestConfiguration);
	}

	// @protocol YMANativeAdLoaderDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMANativeAdLoaderDelegate
	{
		// @optional -(void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didLoadAd:(id<YMANativeAd> _Nonnull)ad;
		[Export("nativeAdLoader:didLoadAd:")]
		void DidLoadAd(YMANativeAdLoader loader, YMANativeAd ad);

		// @optional -(void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didFailLoadingWithError:(NSError * _Nonnull)error;
		[Export("nativeAdLoader:didFailLoadingWithError:")]
		void DidFailLoadingWithError(YMANativeAdLoader loader, NSError error);
	}

	// @protocol YMAAudioSessionManagerDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAAudioSessionManagerDelegate
	{
		// @required -(void)audioSessionManagerWillPlayAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
		[Abstract]
		[Export("audioSessionManagerWillPlayAudio:")]
		void AudioSessionManagerWillPlayAudio(YMAAudioSessionManager audioSessionManager);

		// @required -(void)audioSessionManagerDidStopPlayingAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
		[Abstract]
		[Export("audioSessionManagerDidStopPlayingAudio:")]
		void AudioSessionManagerDidStopPlayingAudio(YMAAudioSessionManager audioSessionManager);
	}

	// @interface YMAVideoController : NSObject
	[BaseType(typeof(NSObject))]
	interface YMAVideoController
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAVideoDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAVideoDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @protocol YMARating <NSObject>
	/*
	  Check whether adding [Model] to this declaration is appropriate.
	  [Model] is used to generate a C# class that implements this protocol,
	  and might be useful for protocols that consumers are supposed to implement,
	  since consumers can subclass the generated class instead of implementing
	  the generated interface. If consumers are not supposed to implement this
	  protocol, then [Model] is redundant and will generate code that will never
	  be used.
	*/
	[Protocol]
	[BaseType(typeof(NSObject))]
	interface YMARating
	{
		// @required -(NSNumber * _Nullable)rating;
		// @required -(void)setRating:(NSNumber * _Nullable)rating;
		[Abstract]
		[NullAllowed, Export("rating")]
		NSNumber Rating { get; set; }
	}

	// @interface YMAAudioSessionManager : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAAudioSessionManager
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAAudioSessionManagerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAAudioSessionManagerDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) BOOL isAutomaticallyManaged;
		[Export("isAutomaticallyManaged")]
		bool IsAutomaticallyManaged { get; set; }
	}

	// @interface YMAVASTRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTRequestConfiguration : INSCopying, INSMutableCopying
	{
		// @property (readonly, nonatomic, strong) YMAVMAPAdBreak * _Nonnull adBreak;
		[Export("adBreak", ArgumentSemantic.Strong)]
		YMAVMAPAdBreak AdBreak { get; }

		// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; }

		// -(instancetype _Nonnull)initWithAdBreak:(YMAVMAPAdBreak * _Nonnull)adBreak;
		[Export("initWithAdBreak:")]
		IntPtr Constructor(YMAVMAPAdBreak adBreak);
	}

	// @interface YMAMutableVASTRequestConfiguration : YMAVASTRequestConfiguration
	[BaseType(typeof(YMAVASTRequestConfiguration))]
	interface YMAMutableVASTRequestConfiguration
	{
		// @property (copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; set; }
	}

	// @interface YMANativeAdMedia : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMANativeAdMedia
	{
		// @property (readonly, assign, nonatomic) CGFloat aspectRatio;
		[Export("aspectRatio")]
		nfloat AspectRatio { get; }
	}

	// @interface YMAVMAP : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAP
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull version;
		[Export("version")]
		string Version { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVMAPAdBreak *> * _Nonnull adBreaks;
		[Export("adBreaks", ArgumentSemantic.Copy)]
		YMAVMAPAdBreak[] AdBreaks { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVMAPExtension *> * _Nonnull extensions;
		[Export("extensions", ArgumentSemantic.Copy)]
		YMAVMAPExtension[] Extensions { get; }
	}

	// @interface YMAVMAPExtension : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAPExtension
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull type;
		[Export("type")]
		string Type { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull value;
		[Export("value")]
		string Value { get; }
	}

	// @interface YMANativeAdRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMANativeAdRequestConfiguration : INSCopying, INSMutableCopying
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull blockID;
		[Export("blockID")]
		string BlockID { get; }

		// @property (readonly, nonatomic, strong) NSNumber * _Nullable age;
		[NullAllowed, Export("age", ArgumentSemantic.Strong)]
		NSNumber Age { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable contextQuery;
		[NullAllowed, Export("contextQuery")]
		string ContextQuery { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSString *> * _Nullable contextTags;
		[NullAllowed, Export("contextTags", ArgumentSemantic.Copy)]
		string[] ContextTags { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable gender;
		[NullAllowed, Export("gender")]
		string Gender { get; }

		// @property (readonly, copy, nonatomic) CLLocation * _Nullable location;
		[NullAllowed, Export("location", ArgumentSemantic.Copy)]
		CLLocation Location { get; }

		// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; }

		// @property (readonly, assign, nonatomic) BOOL shouldLoadImagesAutomatically;
		[Export("shouldLoadImagesAutomatically")]
		bool ShouldLoadImagesAutomatically { get; }

		// -(instancetype _Nonnull)initWithBlockID:(NSString * _Nonnull)blockID;
		[Export("initWithBlockID:")]
		IntPtr Constructor(string blockID);
	}

	// @interface YMAMutableNativeAdRequestConfiguration : YMANativeAdRequestConfiguration
	[BaseType(typeof(YMANativeAdRequestConfiguration))]
	interface YMAMutableNativeAdRequestConfiguration
	{
		// @property (nonatomic, strong) NSNumber * _Nullable age;
		[NullAllowed, Export("age", ArgumentSemantic.Strong)]
		NSNumber Age { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable contextQuery;
		[NullAllowed, Export("contextQuery")]
		string ContextQuery { get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nullable contextTags;
		[NullAllowed, Export("contextTags", ArgumentSemantic.Copy)]
		string[] ContextTags { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable gender;
		[NullAllowed, Export("gender")]
		string Gender { get; set; }

		// @property (copy, nonatomic) CLLocation * _Nullable location;
		[NullAllowed, Export("location", ArgumentSemantic.Copy)]
		CLLocation Location { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; set; }

		// @property (assign, nonatomic) BOOL shouldLoadImagesAutomatically;
		[Export("shouldLoadImagesAutomatically")]
		bool ShouldLoadImagesAutomatically { get; set; }
	}

	// @interface YMAVMAPAdBreak : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAPAdBreak
	{
		// @property (readonly, nonatomic, strong) YMAVMAPAdSource * _Nonnull adSource;
		[Export("adSource", ArgumentSemantic.Strong)]
		YMAVMAPAdSource AdSource { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable breakID;
		[NullAllowed, Export("breakID")]
		string BreakID { get; }

		// @property (readonly, nonatomic, strong) NSArray<NSString *> * _Nonnull breakTypes;
		[Export("breakTypes", ArgumentSemantic.Strong)]
		string[] BreakTypes { get; }

		// @property (readonly, nonatomic, strong) NSNumber * _Nullable repeatAfterMillis;
		[NullAllowed, Export("repeatAfterMillis", ArgumentSemantic.Strong)]
		NSNumber RepeatAfterMillis { get; }

		// @property (readonly, nonatomic, strong) YMAVMAPTimeOffset * _Nonnull timeOffset;
		[Export("timeOffset", ArgumentSemantic.Strong)]
		YMAVMAPTimeOffset TimeOffset { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVMAPExtension *> * _Nonnull extensions;
		[Export("extensions", ArgumentSemantic.Copy)]
		YMAVMAPExtension[] Extensions { get; }
	}

	// @protocol YMANativeAdImageLoadingObserver <NSObject>
	/*
	  Check whether adding [Model] to this declaration is appropriate.
	  [Model] is used to generate a C# class that implements this protocol,
	  and might be useful for protocols that consumers are supposed to implement,
	  since consumers can subclass the generated class instead of implementing
	  the generated interface. If consumers are not supposed to implement this
	  protocol, then [Model] is redundant and will generate code that will never
	  be used.
	*/
	[Protocol]
	[BaseType(typeof(NSObject))]
	interface YMANativeAdImageLoadingObserver
	{
		// @required -(void)nativeAdDidFinishLoadingImages:(id<YMANativeAd> _Nonnull)ad;
		[Abstract]
		[Export("nativeAdDidFinishLoadingImages:")]
		void NativeAdDidFinishLoadingImages(YMANativeAd ad);
	}

	// @interface YMANativeBannerView : UIView
	[BaseType(typeof(UIView))]
	interface YMANativeBannerView
	{
		// @property (nonatomic, strong) id<YMANativeAd> _Nullable ad;
		[NullAllowed, Export("ad", ArgumentSemantic.Strong)]
		YMANativeAd Ad { get; set; }

		// -(void)applyAppearance:(YMANativeTemplateAppearance * _Nonnull)appearance;
		[Export("applyAppearance:")]
		void ApplyAppearance(YMANativeTemplateAppearance appearance);

		// +(CGFloat)heightWithAd:(id<YMANativeAd> _Nonnull)ad width:(CGFloat)width appearance:(YMANativeTemplateAppearance * _Nullable)appearance;
		[Static]
		[Export("heightWithAd:width:appearance:")]
		nfloat HeightWithAd(YMANativeAd ad, nfloat width, [NullAllowed] YMANativeTemplateAppearance appearance);
	}

	partial interface Constants
	{
		// extern NSString *const kYMAVMAPErrorDomain;
		[Field("kYMAVMAPErrorDomain", "__Internal")]
		NSString kYMAVMAPErrorDomain { get; }
	}

	// @interface YMANativeAdView : UIView
	[BaseType(typeof(UIView))]
	interface YMANativeAdView
	{
		// @property (nonatomic, strong) UILabel * _Nullable ageLabel __attribute__((iboutlet));
		[NullAllowed, Export("ageLabel", ArgumentSemantic.Strong)]
		UILabel AgeLabel { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable bodyLabel __attribute__((iboutlet));
		[NullAllowed, Export("bodyLabel", ArgumentSemantic.Strong)]
		UILabel BodyLabel { get; set; }

		// @property (nonatomic, strong) UIButton * _Nullable callToActionButton __attribute__((iboutlet));
		[NullAllowed, Export("callToActionButton", ArgumentSemantic.Strong)]
		UIButton CallToActionButton { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable domainLabel __attribute__((iboutlet));
		[NullAllowed, Export("domainLabel", ArgumentSemantic.Strong)]
		UILabel DomainLabel { get; set; }

		// @property (nonatomic, strong) UIImageView * _Nullable faviconImageView __attribute__((iboutlet));
		[NullAllowed, Export("faviconImageView", ArgumentSemantic.Strong)]
		UIImageView FaviconImageView { get; set; }

		// @property (nonatomic, strong) UIButton * _Nullable feedbackButton __attribute__((iboutlet));
		[NullAllowed, Export("feedbackButton", ArgumentSemantic.Strong)]
		UIButton FeedbackButton { get; set; }

		// @property (nonatomic, strong) UIImageView * _Nullable iconImageView __attribute__((iboutlet));
		[NullAllowed, Export("iconImageView", ArgumentSemantic.Strong)]
		UIImageView IconImageView { get; set; }

		// @property (nonatomic, strong) YMANativeMediaView * _Nullable mediaView __attribute__((iboutlet));
		[NullAllowed, Export("mediaView", ArgumentSemantic.Strong)]
		YMANativeMediaView MediaView { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable priceLabel __attribute__((iboutlet));
		[NullAllowed, Export("priceLabel", ArgumentSemantic.Strong)]
		UILabel PriceLabel { get; set; }

		// @property (nonatomic, strong) UIView<YMARating> * _Nullable ratingView __attribute__((iboutlet));
		[NullAllowed, Export("ratingView", ArgumentSemantic.Strong)]
		YMARating RatingView { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable reviewCountLabel __attribute__((iboutlet));
		[NullAllowed, Export("reviewCountLabel", ArgumentSemantic.Strong)]
		UILabel ReviewCountLabel { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable sponsoredLabel __attribute__((iboutlet));
		[NullAllowed, Export("sponsoredLabel", ArgumentSemantic.Strong)]
		UILabel SponsoredLabel { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable titleLabel __attribute__((iboutlet));
		[NullAllowed, Export("titleLabel", ArgumentSemantic.Strong)]
		UILabel TitleLabel { get; set; }

		// @property (nonatomic, strong) UILabel * _Nullable warningLabel __attribute__((iboutlet));
		[NullAllowed, Export("warningLabel", ArgumentSemantic.Strong)]
		UILabel WarningLabel { get; set; }

		// @property (readonly, nonatomic, strong) id<YMANativeAd> _Nullable ad;
		[NullAllowed, Export("ad", ArgumentSemantic.Strong)]
		YMANativeAd Ad { get; }
	}

	// @interface YMAVMAPAdSource : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAPAdSource
	{
		// @property (readonly, nonatomic, strong) NSNumber * _Nullable allowMultipleAds;
		[NullAllowed, Export("allowMultipleAds", ArgumentSemantic.Strong)]
		NSNumber AllowMultipleAds { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable ID;
		[NullAllowed, Export("ID")]
		string ID { get; }

		// @property (readonly, nonatomic, strong) NSNumber * _Nullable followRedirects;
		[NullAllowed, Export("followRedirects", ArgumentSemantic.Strong)]
		NSNumber FollowRedirects { get; }
	}

	// @protocol YMANativeAd <NSObject>
	/*
	  Check whether adding [Model] to this declaration is appropriate.
	  [Model] is used to generate a C# class that implements this protocol,
	  and might be useful for protocols that consumers are supposed to implement,
	  since consumers can subclass the generated class instead of implementing
	  the generated interface. If consumers are not supposed to implement this
	  protocol, then [Model] is redundant and will generate code that will never
	  be used.
	*/
	[Protocol]
	[BaseType(typeof(NSObject))]
	interface YMANativeAd
	{
		// @required @property (readonly, assign, nonatomic) YMANativeAdType adType;
		[Abstract]
		[Export("adType", ArgumentSemantic.Assign)]
		YMANativeAdType AdType { get; }

		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMANativeAdDelegate Delegate { get; set; }

		// @required @property (nonatomic, weak) id<YMANativeAdDelegate> _Nullable delegate;
		[Abstract]
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @required -(void)addImageLoadingObserver:(id<YMANativeAdImageLoadingObserver> _Nonnull)observer;
		[Abstract]
		[Export("addImageLoadingObserver:")]
		void AddImageLoadingObserver(YMANativeAdImageLoadingObserver observer);

		// @required -(void)removeImageLoadingObserver:(id<YMANativeAdImageLoadingObserver> _Nonnull)observer;
		[Abstract]
		[Export("removeImageLoadingObserver:")]
		void RemoveImageLoadingObserver(YMANativeAdImageLoadingObserver observer);

		// @required -(YMANativeAdAssets * _Nonnull)adAssets;
		[Abstract]
		[Export("adAssets")]
		YMANativeAdAssets AdAssets { get; }

		// @required @property (readonly, copy, nonatomic) NSString * _Nullable info;
		[Abstract]
		[NullAllowed, Export("info")]
		string Info { get; }

		// @required -(void)loadImages;
		[Abstract]
		[Export("loadImages")]
		void LoadImages();

		// @required -(BOOL)bindWithAdView:(YMANativeAdView * _Nonnull)adView error:(NSError * _Nullable * _Nullable)error;
		[Abstract]
		[Export("bindWithAdView:error:")]
		bool BindWithAdView(YMANativeAdView adView, [NullAllowed] out NSError error);
	}

	// @interface YMAVASTAd : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTAd
	{
		// @property (readonly, assign, nonatomic) YMAVASTAdType adType;
		[Export("adType", ArgumentSemantic.Assign)]
		YMAVASTAdType AdType { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable adSystem;
		[NullAllowed, Export("adSystem")]
		string AdSystem { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable adTitle;
		[NullAllowed, Export("adTitle")]
		string AdTitle { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable adDescription;
		[NullAllowed, Export("adDescription")]
		string AdDescription { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable survey;
		[NullAllowed, Export("survey")]
		string Survey { get; }

		// @property (readonly, copy, nonatomic) NSArray<YMAVASTCreative *> * _Nonnull creatives;
		[Export("creatives", ArgumentSemantic.Copy)]
		YMAVASTCreative[] Creatives { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable VASTAdTagURI;
		[NullAllowed, Export("VASTAdTagURI")]
		string VASTAdTagURI { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable rawVAST;
		[NullAllowed, Export("rawVAST")]
		string RawVAST { get; }

		// @property (readonly, nonatomic, strong) NSNumber * _Nullable sequence;
		[NullAllowed, Export("sequence", ArgumentSemantic.Strong)]
		NSNumber Sequence { get; }
	}

	partial interface Constants
	{
		// extern NSString *const _Nonnull kYMAVASTAdImpression;
		[Field("kYMAVASTAdImpression", "__Internal")]
		NSString kYMAVASTAdImpression { get; }

		// extern NSString *const _Nonnull kYMAVASTAdRenderImpression;
		[Field("kYMAVASTAdRenderImpression", "__Internal")]
		NSString kYMAVASTAdRenderImpression { get; }

		// extern NSString *const _Nonnull kYMACreativeStart;
		[Field("kYMACreativeStart", "__Internal")]
		NSString kYMACreativeStart { get; }

		// extern NSString *const _Nonnull kYMACreativeFirstQuartile;
		[Field("kYMACreativeFirstQuartile", "__Internal")]
		NSString kYMACreativeFirstQuartile { get; }

		// extern NSString *const _Nonnull kYMACreativeMidpoint;
		[Field("kYMACreativeMidpoint", "__Internal")]
		NSString kYMACreativeMidpoint { get; }

		// extern NSString *const _Nonnull kYMACreativeThirdQuartile;
		[Field("kYMACreativeThirdQuartile", "__Internal")]
		NSString kYMACreativeThirdQuartile { get; }

		// extern NSString *const _Nonnull kYMACreativeComplete;
		[Field("kYMACreativeComplete", "__Internal")]
		NSString kYMACreativeComplete { get; }

		// extern NSString *const _Nonnull kYMACreativeMute;
		[Field("kYMACreativeMute", "__Internal")]
		NSString kYMACreativeMute { get; }

		// extern NSString *const _Nonnull kYMACreativeUnmute;
		[Field("kYMACreativeUnmute", "__Internal")]
		NSString kYMACreativeUnmute { get; }

		// extern NSString *const _Nonnull kYMACreativeFullscreen;
		[Field("kYMACreativeFullscreen", "__Internal")]
		NSString kYMACreativeFullscreen { get; }

		// extern NSString *const _Nonnull kYMACreativeExpand;
		[Field("kYMACreativeExpand", "__Internal")]
		NSString kYMACreativeExpand { get; }

		// extern NSString *const _Nonnull kYMACreativeCollapse;
		[Field("kYMACreativeCollapse", "__Internal")]
		NSString kYMACreativeCollapse { get; }

		// extern NSString *const _Nonnull kYMACreativeClose;
		[Field("kYMACreativeClose", "__Internal")]
		NSString kYMACreativeClose { get; }

		// extern NSString *const _Nonnull kYMACreativeSkip;
		[Field("kYMACreativeSkip", "__Internal")]
		NSString kYMACreativeSkip { get; }

		// extern NSString *const _Nonnull kYMACreativeResume;
		[Field("kYMACreativeResume", "__Internal")]
		NSString kYMACreativeResume { get; }

		// extern NSString *const _Nonnull kYMACreativePause;
		[Field("kYMACreativePause", "__Internal")]
		NSString kYMACreativePause { get; }

		// extern NSString *const _Nonnull kYMACreativeView;
		[Field("kYMACreativeView", "__Internal")]
		NSString kYMACreativeView { get; }

		// extern NSString *const _Nonnull kYMACreativeProgress;
		[Field("kYMACreativeProgress", "__Internal")]
		NSString kYMACreativeProgress { get; }

		// extern NSString *const _Nonnull kYMACreativeClickTracking;
		[Field("kYMACreativeClickTracking", "__Internal")]
		NSString kYMACreativeClickTracking { get; }
	}

	// @interface YMAVASTTracker : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTTracker
	{
		// +(void)trackAdEvent:(YMAVASTAd * _Nonnull)ad eventName:(NSString * _Nonnull)eventName;
		[Static]
		[Export("trackAdEvent:eventName:")]
		void TrackAdEvent(YMAVASTAd ad, string eventName);

		// +(void)trackCreativeEvent:(YMAVASTCreative * _Nonnull)creative eventName:(NSString * _Nonnull)eventName;
		[Static]
		[Export("trackCreativeEvent:eventName:")]
		void TrackCreativeEvent(YMAVASTCreative creative, string eventName);
	}

	[Static]
	partial interface Constants
	{
		// extern NSString *const kYMAAdsErrorDomain;
		[Field("kYMAAdsErrorDomain", "__Internal")]
		NSString kYMAAdsErrorDomain { get; }
	}

	partial interface Constants
	{
		// extern NSString *const kYMAVASTErrorDomain;
		[Field("kYMAVASTErrorDomain", "__Internal")]
		NSString kYMAVASTErrorDomain { get; }

		// extern NSString *const kYMAVASTSpecialResponseTextKey;
		[Field("kYMAVASTSpecialResponseTextKey", "__Internal")]
		NSString kYMAVASTSpecialResponseTextKey { get; }
	}

	// @interface YMAVASTIcon : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTIcon
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull program;
		[Export("program")]
		string Program { get; }

		// @property (readonly, assign, nonatomic) YMAVASTIconHorizontalPosition horizontalPosition;
		[Export("horizontalPosition", ArgumentSemantic.Assign)]
		YMAVASTIconHorizontalPosition HorizontalPosition { get; }

		// @property (readonly, assign, nonatomic) YMAVASTIconVerticalPosition verticalPosition;
		[Export("verticalPosition", ArgumentSemantic.Assign)]
		YMAVASTIconVerticalPosition VerticalPosition { get; }

		// @property (readonly, assign, nonatomic) NSInteger x;
		[Export("x")]
		nint X { get; }

		// @property (readonly, assign, nonatomic) NSInteger y;
		[Export("y")]
		nint Y { get; }

		// @property (readonly, assign, nonatomic) NSInteger width;
		[Export("width")]
		nint Width { get; }

		// @property (readonly, assign, nonatomic) NSInteger height;
		[Export("height")]
		nint Height { get; }

		// @property (readonly, assign, nonatomic) YMAVASTIconResourceType resourceType;
		[Export("resourceType", ArgumentSemantic.Assign)]
		YMAVASTIconResourceType ResourceType { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable resourceURI;
		[NullAllowed, Export("resourceURI")]
		string ResourceURI { get; }
	}

	partial interface Constants
	{
		// extern NSString *const _Nonnull kYMABreakIDInpage;
		[Field("kYMABreakIDInpage", "__Internal")]
		NSString kYMABreakIDInpage { get; }

		// extern NSString *const _Nonnull kYMABreakIDMidRoll;
		[Field("kYMABreakIDMidRoll", "__Internal")]
		NSString kYMABreakIDMidRoll { get; }

		// extern NSString *const _Nonnull kYMABreakIDPauseRoll;
		[Field("kYMABreakIDPauseRoll", "__Internal")]
		NSString kYMABreakIDPauseRoll { get; }

		// extern NSString *const _Nonnull kYMABreakIDPostRoll;
		[Field("kYMABreakIDPostRoll", "__Internal")]
		NSString kYMABreakIDPostRoll { get; }

		// extern NSString *const _Nonnull kYMABreakIDPreRoll;
		[Field("kYMABreakIDPreRoll", "__Internal")]
		NSString kYMABreakIDPreRoll { get; }

		// extern NSString *const _Nonnull kYMABreakTypeLinear;
		[Field("kYMABreakTypeLinear", "__Internal")]
		NSString kYMABreakTypeLinear { get; }

		// extern NSString *const _Nonnull kYMABreakTypeNonLinear;
		[Field("kYMABreakTypeNonLinear", "__Internal")]
		NSString kYMABreakTypeNonLinear { get; }

		// extern NSString *const _Nonnull kYMABreakTypeDisplay;
		[Field("kYMABreakTypeDisplay", "__Internal")]
		NSString kYMABreakTypeDisplay { get; }
	}

	// @interface YMAVMAPTimeOffset : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAPTimeOffset
	{
		// @property (readonly, copy, nonatomic) NSString * rawValue;
		[Export("rawValue")]
		string RawValue { get; }
	}

	// @interface YMAVMAPRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVMAPRequestConfiguration : INSCopying, INSMutableCopying
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull pageID;
		[Export("pageID")]
		string PageID { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull categoryID;
		[Export("categoryID")]
		string CategoryID { get; }

		// -(instancetype _Nonnull)initWithPageID:(NSString * _Nonnull)pageID;
		[Export("initWithPageID:")]
		IntPtr Constructor(string pageID);
	}

	// @interface YMAMutableVMAPRequestConfiguration : YMAVMAPRequestConfiguration
	[BaseType(typeof(YMAVMAPRequestConfiguration))]
	interface YMAMutableVMAPRequestConfiguration
	{
		// @property (copy, nonatomic) NSString * _Nullable categoryID;
		[NullAllowed, Export("categoryID")]
		string CategoryID { get; set; }
	}

	// @interface YMAVMAPLoader : NSObject
	[BaseType(typeof(NSObject))]
	interface YMAVMAPLoader
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAVMAPLoaderDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAVMAPLoaderDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)loadVMAPWithRequestConfiguration:(YMAVMAPRequestConfiguration * _Nonnull)requestConfiguration;
		[Export("loadVMAPWithRequestConfiguration:")]
		void LoadVMAPWithRequestConfiguration(YMAVMAPRequestConfiguration requestConfiguration);
	}

	// @protocol YMAVMAPLoaderDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAVMAPLoaderDelegate
	{
		// @required -(void)loader:(YMAVMAPLoader * _Nonnull)loader didLoadVMAP:(YMAVMAP * _Nonnull)VMAP;
		[Abstract]
		[Export("loader:didLoadVMAP:")]
		void DidLoadVMAP(YMAVMAPLoader loader, YMAVMAP VMAP);

		// @required -(void)loader:(YMAVMAPLoader * _Nonnull)loader didFailLoadingVMAPWithError:(NSError * _Nonnull)error;
		[Abstract]
		[Export("loader:didFailLoadingVMAPWithError:")]
		void DidFailLoadingVMAPWithError(YMAVMAPLoader loader, NSError error);
	}

	// @interface YMAVideoAdLoader : NSObject
	[BaseType(typeof(NSObject))]
	interface YMAVideoAdLoader
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAVideoAdLoaderDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAVideoAdLoaderDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)loadVASTWithRequestConfiguration:(YMAVASTRequestConfiguration * _Nonnull)requestConfiguration;
		[Export("loadVASTWithRequestConfiguration:")]
		void LoadVASTWithRequestConfiguration(YMAVASTRequestConfiguration requestConfiguration);
	}

	// @protocol YMAVideoAdLoaderDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAVideoAdLoaderDelegate
	{
		// @required -(void)loaderDidLoadVideoAds:(NSArray<YMAVASTAd *> * _Nonnull)ads;
		[Abstract]
		[Export("loaderDidLoadVideoAds:")]
		void LoaderDidLoadVideoAds(YMAVASTAd[] ads);

		// @required -(void)loaderDidFailLoadingVideoAdsWithError:(NSError * _Nonnull)error;
		[Abstract]
		[Export("loaderDidFailLoadingVideoAdsWithError:")]
		void LoaderDidFailLoadingVideoAdsWithError(NSError error);
	}

	// @protocol YMAReward <NSObject>
	/*
	  Check whether adding [Model] to this declaration is appropriate.
	  [Model] is used to generate a C# class that implements this protocol,
	  and might be useful for protocols that consumers are supposed to implement,
	  since consumers can subclass the generated class instead of implementing
	  the generated interface. If consumers are not supposed to implement this
	  protocol, then [Model] is redundant and will generate code that will never
	  be used.
	*/
	[Protocol]
	[BaseType(typeof(NSObject))]
	interface YMAReward
	{
		// @required @property (readonly, assign, nonatomic) NSInteger amount;
		[Abstract]
		[Export("amount")]
		nint Amount { get; }

		// @required @property (readonly, copy, nonatomic) NSString * _Nonnull type;
		[Abstract]
		[Export("type")]
		string Type { get; }
	}

	// @protocol YMAImpressionData <NSObject>
	/*
	  Check whether adding [Model] to this declaration is appropriate.
	  [Model] is used to generate a C# class that implements this protocol,
	  and might be useful for protocols that consumers are supposed to implement,
	  since consumers can subclass the generated class instead of implementing
	  the generated interface. If consumers are not supposed to implement this
	  protocol, then [Model] is redundant and will generate code that will never
	  be used.
	*/
	[Protocol]
	[BaseType(typeof(NSObject))]
	interface YMAImpressionData
	{
		// @required @property (readonly, nonatomic, strong) NSString * _Nonnull rawData;
		[Abstract]
		[Export("rawData", ArgumentSemantic.Strong)]
		string RawData { get; }
	}

	// @interface YMAAdView : UIView
	[BaseType(typeof(UIView))]
	[DisableDefaultCtor]
	interface YMAAdView
	{
		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAAdViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAAdViewDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull blockID;
		[Export("blockID")]
		string BlockID { get; }

		// @property (readonly, nonatomic, strong) YMAVideoController * _Nonnull videoController;
		[Export("videoController", ArgumentSemantic.Strong)]
		YMAVideoController VideoController { get; }

		// -(instancetype _Nonnull)initWithBlockID:(NSString * _Nonnull)blockID adSize:(YMAAdSize * _Nonnull)adSize;
		[Export("initWithBlockID:adSize:")]
		IntPtr Constructor(string blockID, YMAAdSize adSize);

		// -(void)displayAtTopInView:(UIView * _Nonnull)view;
		[Export("displayAtTopInView:")]
		void DisplayAtTopInView(UIView view);

		// -(void)displayAtBottomInView:(UIView * _Nonnull)view;
		[Export("displayAtBottomInView:")]
		void DisplayAtBottomInView(UIView view);

		// -(void)loadAd;
		[Export("loadAd")]
		void LoadAd();

		// -(void)loadAdWithRequest:(YMAAdRequest * _Nullable)request;
		[Export("loadAdWithRequest:")]
		void LoadAdWithRequest([NullAllowed] YMAAdRequest request);

		// -(CGSize)adContentSize;
		[Export("adContentSize")]
		CGSize AdContentSize { get; }
	}

	// @protocol YMAAdViewDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAAdViewDelegate
	{
		// @optional -(UIViewController * _Nullable)viewControllerForPresentingModalView;
		[NullAllowed, Export("viewControllerForPresentingModalView")]
		UIViewController ViewControllerForPresentingModalView { get; }

		// @optional -(void)adViewDidLoad:(YMAAdView * _Nonnull)adView;
		[Export("adViewDidLoad:")]
		void AdViewDidLoad(YMAAdView adView);

		// @optional -(void)adViewDidFailLoading:(YMAAdView * _Nonnull)adView error:(NSError * _Nonnull)error;
		[Export("adViewDidFailLoading:error:")]
		void AdViewDidFailLoading(YMAAdView adView, NSError error);

		// @optional -(void)adViewWillLeaveApplication:(YMAAdView * _Nonnull)adView;
		[Export("adViewWillLeaveApplication:")]
		void AdViewWillLeaveApplication(YMAAdView adView);

		// @optional -(void)adView:(YMAAdView * _Nonnull)adView willPresentScreen:(UIViewController * _Nullable)viewController;
		[Export("adView:willPresentScreen:")]
		void AdViewWillPresentScreen(YMAAdView adView, [NullAllowed] UIViewController viewController);

		// @optional -(void)adView:(YMAAdView * _Nonnull)adView didDismissScreen:(UIViewController * _Nullable)viewController;
		[Export("adView:didDismissScreen:")]
		void AdViewDidDismissScreen(YMAAdView adView, [NullAllowed] UIViewController viewController);

		// @optional -(void)adView:(YMAAdView * _Nonnull)adView didTrackImpressionWithData:(id<YMAImpressionData> _Nullable)impressionData;
		[Export("adView:didTrackImpressionWithData:")]
		void AdViewDidTrackImpressionWithData(YMAAdView adView, [NullAllowed] YMAImpressionData impressionData);
	}

	partial interface Constants
	{
		// extern NSString *const _Nonnull kYMAGenderFemale;
		[Field("kYMAGenderFemale", "__Internal")]
		NSString kYMAGenderFemale { get; }

		// extern NSString *const _Nonnull kYMAGenderMale;
		[Field("kYMAGenderMale", "__Internal")]
		NSString kYMAGenderMale { get; }
	}

	// @interface YMAMobileAds : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAMobileAds
	{
		// +(void)enableLogging;
		[Static]
		[Export("enableLogging")]
		void EnableLogging();

		// +(NSString * _Nonnull)SDKVersion;
		[Static]
		[Export("SDKVersion")]
		string SDKVersion { get; }

		// +(YMAAudioSessionManager * _Nonnull)audioSessionManager;
		[Static]
		[Export("audioSessionManager")]
		YMAAudioSessionManager AudioSessionManager { get; }

		// +(void)setLocationTrackingEnabled:(BOOL)enabled;
		[Static]
		[Export("setLocationTrackingEnabled:")]
		void SetLocationTrackingEnabled(bool enabled);

		// +(void)enableVisibilityErrorIndicatorForDeviceType:(YMADeviceType)deviceType;
		[Static]
		[Export("enableVisibilityErrorIndicatorForDeviceType:")]
		void EnableVisibilityErrorIndicatorForDeviceType(YMADeviceType deviceType);

		// +(void)setUserConsent:(BOOL)consent;
		[Static]
		[Export("setUserConsent:")]
		void SetUserConsent(bool consent);
	}

	// @interface YMAAdSize : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAAdSize
	{
		// @property (readonly, assign, nonatomic) CGSize size;
		[Export("size", ArgumentSemantic.Assign)]
		CGSize Size { get; }

		// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nonnull attributes;
		[Export("attributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Attributes { get; }

		// +(instancetype _Nonnull)fixedSizeWithCGSize:(CGSize)size;
		[Static]
		[Export("fixedSizeWithCGSize:")]
		YMAAdSize FixedSizeWithCGSize(CGSize size);

		// +(instancetype _Nonnull)flexibleSize;
		[Static]
		[Export("flexibleSize")]
		YMAAdSize FlexibleSize();

		// +(instancetype _Nonnull)flexibleSizeWithContainerWidth:(CGFloat)width;
		[Static]
		[Export("flexibleSizeWithContainerWidth:")]
		YMAAdSize FlexibleSizeWithContainerWidth(nfloat width);

		// +(instancetype _Nonnull)flexibleSizeWithCGSize:(CGSize)size;
		[Static]
		[Export("flexibleSizeWithCGSize:")]
		YMAAdSize FlexibleSizeWithCGSize(CGSize size);

		// +(instancetype _Nonnull)stickySizeWithContainerWidth:(CGFloat)width;
		[Static]
		[Export("stickySizeWithContainerWidth:")]
		YMAAdSize StickySizeWithContainerWidth(nfloat width);
	}

	partial interface Constants
	{
		// extern const CGSize YMAAdSizeBanner_320x50;
		[Field("YMAAdSizeBanner_320x50", "__Internal")]
		CGSize YMAAdSizeBanner_320x50 { get; }

		// extern const CGSize YMAAdSizeBanner_320x100;
		[Field("YMAAdSizeBanner_320x100", "__Internal")]
		CGSize YMAAdSizeBanner_320x100 { get; }

		// extern const CGSize YMAAdSizeBanner_300x250;
		[Field("YMAAdSizeBanner_300x250", "__Internal")]
		CGSize YMAAdSizeBanner_300x250 { get; }

		// extern const CGSize YMAAdSizeBanner_300x300;
		[Field("YMAAdSizeBanner_300x300", "__Internal")]
		CGSize YMAAdSizeBanner_300x300 { get; }

		// extern const CGSize YMAAdSizeBanner_240x400;
		[Field("YMAAdSizeBanner_240x400", "__Internal")]
		CGSize YMAAdSizeBanner_240x400 { get; }

		// extern const CGSize YMAAdSizeBanner_400x240;
		[Field("YMAAdSizeBanner_400x240", "__Internal")]
		CGSize YMAAdSizeBanner_400x240 { get; }

		// extern const CGSize YMAAdSizeBanner_728x90;
		[Field("YMAAdSizeBanner_728x90", "__Internal")]
		CGSize YMAAdSizeBanner_728x90 { get; }
	}

	// @interface YMAAdRequest : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMAAdRequest : INSCopying, INSMutableCopying
	{
		// @property (readonly, nonatomic, strong) NSNumber * _Nullable age;
		[NullAllowed, Export("age", ArgumentSemantic.Strong)]
		NSNumber Age { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable contextQuery;
		[NullAllowed, Export("contextQuery")]
		string ContextQuery { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSString *> * _Nullable contextTags;
		[NullAllowed, Export("contextTags", ArgumentSemantic.Copy)]
		string[] ContextTags { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable gender;
		[NullAllowed, Export("gender")]
		string Gender { get; }

		// @property (readonly, copy, nonatomic) CLLocation * _Nullable location;
		[NullAllowed, Export("location", ArgumentSemantic.Copy)]
		CLLocation Location { get; }

		// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; }
	}

	// @interface YMAMutableAdRequest : YMAAdRequest
	[BaseType(typeof(YMAAdRequest))]
	interface YMAMutableAdRequest
	{
		// @property (nonatomic, strong) NSNumber * _Nullable age;
		[NullAllowed, Export("age", ArgumentSemantic.Strong)]
		NSNumber Age { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable contextQuery;
		[NullAllowed, Export("contextQuery")]
		string ContextQuery { get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nullable contextTags;
		[NullAllowed, Export("contextTags", ArgumentSemantic.Copy)]
		string[] ContextTags { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable gender;
		[NullAllowed, Export("gender")]
		string Gender { get; set; }

		// @property (copy, nonatomic) CLLocation * _Nullable location;
		[NullAllowed, Export("location", ArgumentSemantic.Copy)]
		CLLocation Location { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nullable parameters;
		[NullAllowed, Export("parameters", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSString> Parameters { get; set; }
	}

	// @interface YMAInterstitialAd : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAInterstitialAd
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull blockID;
		[Export("blockID")]
		string BlockID { get; }

		// @property (readonly, assign, nonatomic) BOOL loaded;
		[Export("loaded")]
		bool Loaded { get; }

		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMAInterstitialAdDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMAInterstitialAdDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) BOOL shouldOpenLinksInApp;
		[Export("shouldOpenLinksInApp")]
		bool ShouldOpenLinksInApp { get; set; }

		// @property (readonly, assign, nonatomic) BOOL hasBeenPresented;
		[Export("hasBeenPresented")]
		bool HasBeenPresented { get; }

		// -(instancetype _Nonnull)initWithBlockID:(NSString * _Nonnull)blockID;
		[Export("initWithBlockID:")]
		IntPtr Constructor(string blockID);

		// -(void)load;
		[Export("load")]
		void Load();

		// -(void)loadWithRequest:(YMAAdRequest * _Nullable)request;
		[Export("loadWithRequest:")]
		void LoadWithRequest([NullAllowed] YMAAdRequest request);

		// -(void)presentFromViewController:(UIViewController * _Nonnull)viewController;
		[Export("presentFromViewController:")]
		void PresentFromViewController(UIViewController viewController);

		// -(void)presentFromViewController:(UIViewController * _Nonnull)viewController dismissalBlock:(void (^ _Nullable)(void))dismissalBlock;
		[Export("presentFromViewController:dismissalBlock:")]
		void PresentFromViewController(UIViewController viewController, [NullAllowed] Action dismissalBlock);
	}

	// @protocol YMAInterstitialAdDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAInterstitialAdDelegate
	{
		// @optional -(void)interstitialAdDidLoad:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdDidLoad:")]
		void InterstitialAdDidLoad(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAdDidFailToLoad:(YMAInterstitialAd * _Nonnull)interstitialAd error:(NSError * _Nonnull)error;
		[Export("interstitialAdDidFailToLoad:error:")]
		void InterstitialAdDidFailToLoad(YMAInterstitialAd interstitialAd, NSError error);

		// @optional -(void)interstitialAdWillLeaveApplication:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdWillLeaveApplication:")]
		void InterstitialAdWillLeaveApplication(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAdDidFailToPresent:(YMAInterstitialAd * _Nonnull)interstitialAd error:(NSError * _Nonnull)error;
		[Export("interstitialAdDidFailToPresent:error:")]
		void InterstitialAdDidFailToPresent(YMAInterstitialAd interstitialAd, NSError error);

		// @optional -(void)interstitialAdWillAppear:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdWillAppear:")]
		void InterstitialAdWillAppear(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAdDidAppear:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdDidAppear:")]
		void InterstitialAdDidAppear(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAdWillDisappear:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdWillDisappear:")]
		void InterstitialAdWillDisappear(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAdDidDisappear:(YMAInterstitialAd * _Nonnull)interstitialAd;
		[Export("interstitialAdDidDisappear:")]
		void InterstitialAdDidDisappear(YMAInterstitialAd interstitialAd);

		// @optional -(void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd willPresentScreen:(UIViewController * _Nullable)webBrowser;
		[Export("interstitialAd:willPresentScreen:")]
		void InterstitialAd(YMAInterstitialAd interstitialAd, [NullAllowed] UIViewController webBrowser);

		// @optional -(void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd didTrackImpressionWithData:(id<YMAImpressionData> _Nullable)impressionData;
		[Export("interstitialAd:didTrackImpressionWithData:")]
		void InterstitialAd(YMAInterstitialAd interstitialAd, [NullAllowed] YMAImpressionData impressionData);
	}

	// @interface YMARewardedAd : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMARewardedAd
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull blockID;
		[Export("blockID")]
		string BlockID { get; }

		// @property (readonly, assign, nonatomic) BOOL loaded;
		[Export("loaded")]
		bool Loaded { get; }

		[Wrap("WeakDelegate")]
		[NullAllowed]
		YMARewardedAdDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<YMARewardedAdDelegate> _Nullable delegate;
		[NullAllowed, Export("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) BOOL shouldOpenLinksInApp;
		[Export("shouldOpenLinksInApp")]
		bool ShouldOpenLinksInApp { get; set; }

		// @property (readonly, assign, nonatomic) BOOL hasBeenPresented;
		[Export("hasBeenPresented")]
		bool HasBeenPresented { get; }

		// @property (copy, nonatomic) NSString * _Nullable userID;
		[NullAllowed, Export("userID")]
		string UserID { get; set; }

		// -(instancetype _Nonnull)initWithBlockID:(NSString * _Nonnull)blockID;
		[Export("initWithBlockID:")]
		IntPtr Constructor(string blockID);

		// -(void)load;
		[Export("load")]
		void Load();

		// -(void)loadWithRequest:(YMAAdRequest * _Nullable)request;
		[Export("loadWithRequest:")]
		void LoadWithRequest([NullAllowed] YMAAdRequest request);

		// -(void)presentFromViewController:(UIViewController * _Nonnull)viewController;
		[Export("presentFromViewController:")]
		void PresentFromViewController(UIViewController viewController);

		// -(void)presentFromViewController:(UIViewController * _Nonnull)viewController dismissalBlock:(void (^ _Nullable)(void))dismissalBlock;
		[Export("presentFromViewController:dismissalBlock:")]
		void PresentFromViewController(UIViewController viewController, [NullAllowed] Action dismissalBlock);
	}

	// @protocol YMARewardedAdDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMARewardedAdDelegate
	{
		// @optional -(void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didReward:(id<YMAReward> _Nonnull)reward;
		[Export("rewardedAd:didReward:")]
		void RewardedAd(YMARewardedAd rewardedAd, YMAReward reward);

		// @optional -(void)rewardedAdDidLoad:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdDidLoad:")]
		void RewardedAdDidLoad(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAdDidFailToLoad:(YMARewardedAd * _Nonnull)rewardedAd error:(NSError * _Nonnull)error;
		[Export("rewardedAdDidFailToLoad:error:")]
		void RewardedAdDidFailToLoad(YMARewardedAd rewardedAd, NSError error);

		// @optional -(void)rewardedAdWillLeaveApplication:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdWillLeaveApplication:")]
		void RewardedAdWillLeaveApplication(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAdDidFailToPresent:(YMARewardedAd * _Nonnull)rewardedAd error:(NSError * _Nonnull)error;
		[Export("rewardedAdDidFailToPresent:error:")]
		void RewardedAdDidFailToPresent(YMARewardedAd rewardedAd, NSError error);

		// @optional -(void)rewardedAdWillAppear:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdWillAppear:")]
		void RewardedAdWillAppear(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAdDidAppear:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdDidAppear:")]
		void RewardedAdDidAppear(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAdWillDisappear:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdWillDisappear:")]
		void RewardedAdWillDisappear(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAdDidDisappear:(YMARewardedAd * _Nonnull)rewardedAd;
		[Export("rewardedAdDidDisappear:")]
		void RewardedAdDidDisappear(YMARewardedAd rewardedAd);

		// @optional -(void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd willPresentScreen:(UIViewController * _Nullable)viewController;
		[Export("rewardedAd:willPresentScreen:")]
		void RewardedAd(YMARewardedAd rewardedAd, [NullAllowed] UIViewController viewController);

		// @optional -(void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didTrackImpressionWithData:(id<YMAImpressionData> _Nullable)impressionData;
		[Export("rewardedAd:didTrackImpressionWithData:")]
		void RewardedAd(YMARewardedAd rewardedAd, [NullAllowed] YMAImpressionData impressionData);
	}

	// @protocol YMAVideoDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMAVideoDelegate
	{
		// @optional -(void)videoControllerDidFinishPlayingVideo:(YMAVideoController * _Nonnull)videoController;
		[Export("videoControllerDidFinishPlayingVideo:")]
		void VideoControllerDidFinishPlayingVideo(YMAVideoController videoController);
	}

	partial interface Constants
	{
		// extern NSString *const _Nonnull kYMAVMAPAdBreakStart;
		[Field("kYMAVMAPAdBreakStart", "__Internal")]
		NSString kYMAVMAPAdBreakStart { get; }

		// extern NSString *const _Nonnull kYMAVMAPAdBreakEnd;
		[Field("kYMAVMAPAdBreakEnd", "__Internal")]
		NSString kYMAVMAPAdBreakEnd { get; }

		// extern NSString *const _Nonnull kYMAVMAPAdBreakError;
		[Field("kYMAVMAPAdBreakError", "__Internal")]
		NSString kYMAVMAPAdBreakError { get; }
	}

	// @interface YMAVMAPTracker : NSObject
	[BaseType(typeof(NSObject))]
	interface YMAVMAPTracker
	{
		// -(void)trackAdBreakEvent:(YMAVMAPAdBreak * _Nonnull)adBreak eventName:(NSString * _Nonnull)eventName;
		[Export("trackAdBreakEvent:eventName:")]
		void TrackAdBreakEvent(YMAVMAPAdBreak adBreak, string eventName);
	}

	// @protocol YMANativeAdDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface YMANativeAdDelegate
	{
		// @optional -(UIViewController * _Nullable)viewControllerForPresentingModalView;
		[NullAllowed, Export("viewControllerForPresentingModalView")]
		UIViewController ViewControllerForPresentingModalView { get; }

		// @optional -(void)nativeAdWillLeaveApplication:(id<YMANativeAd> _Nonnull)ad;
		[Export("nativeAdWillLeaveApplication:")]
		void NativeAdWillLeaveApplication(YMANativeAd ad);

		// @optional -(void)nativeAd:(id<YMANativeAd> _Nonnull)ad willPresentScreen:(UIViewController * _Nullable)viewController;
		[Export("nativeAd:willPresentScreen:")]
		void NativeAdЦillPresentScreen(YMANativeAd ad, [NullAllowed] UIViewController viewController);

		// @optional -(void)nativeAd:(id<YMANativeAd> _Nonnull)ad didDismissScreen:(UIViewController * _Nullable)viewController;
		[Export("nativeAd:didDismissScreen:")]
		void NativeAdDidDismissScreen(YMANativeAd ad, [NullAllowed] UIViewController viewController);

		// @optional -(void)nativeAd:(id<YMANativeAd> _Nonnull)ad didTrackImpressionWithData:(id<YMAImpressionData> _Nullable)impressionData;
		[Export("nativeAd:didTrackImpressionWithData:")]
		void NativeAdDidTrackImpressionWithData(YMANativeAd ad, [NullAllowed] YMAImpressionData impressionData);

		// @optional -(void)closeNativeAd:(id<YMANativeAd> _Nonnull)ad;
		[Export("closeNativeAd:")]
		void CloseNativeAd(YMANativeAd ad);
	}

	partial interface Constants
	{
		// extern NSString *const kYMANativeAdErrorDomain;
		[Field("kYMANativeAdErrorDomain", "__Internal")]
		NSString kYMANativeAdErrorDomain { get; }
	}

	// @interface YMANativeTemplateAppearance : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMANativeTemplateAppearance : INSCopying, INSMutableCopying
	{
		// @property (readonly, assign, nonatomic) CGFloat borderWidth;
		[Export("borderWidth")]
		nfloat BorderWidth { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull borderColor;
		[Export("borderColor", ArgumentSemantic.Strong)]
		UIColor BorderColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull backgroundColor;
		[Export("backgroundColor", ArgumentSemantic.Strong)]
		UIColor BackgroundColor { get; }

		// @property (readonly, assign, nonatomic) YMAHorizontalOffset contentPadding;
		[Export("contentPadding", ArgumentSemantic.Assign)]
		YMAHorizontalOffset ContentPadding { get; }

		// @property (readonly, assign, nonatomic) YMAHorizontalOffset imageMargins;
		[Export("imageMargins", ArgumentSemantic.Assign)]
		YMAHorizontalOffset ImageMargins { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable ageAppearance;
		[NullAllowed, Export("ageAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance AgeAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable bodyAppearance;
		[NullAllowed, Export("bodyAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance BodyAppearance { get; }

		// @property (readonly, copy, nonatomic) YMAButtonAppearance * _Nullable callToActionAppearance;
		[NullAllowed, Export("callToActionAppearance", ArgumentSemantic.Copy)]
		YMAButtonAppearance CallToActionAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable domainAppearance;
		[NullAllowed, Export("domainAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance DomainAppearance { get; }

		// @property (readonly, copy, nonatomic) YMAImageAppearance * _Nullable faviconAppearance;
		[NullAllowed, Export("faviconAppearance", ArgumentSemantic.Copy)]
		YMAImageAppearance FaviconAppearance { get; }

		// @property (readonly, copy, nonatomic) YMAImageAppearance * _Nullable imageAppearance;
		[NullAllowed, Export("imageAppearance", ArgumentSemantic.Copy)]
		YMAImageAppearance ImageAppearance { get; }

		// @property (readonly, copy, nonatomic) YMARatingAppearance * _Nullable ratingAppearance;
		[NullAllowed, Export("ratingAppearance", ArgumentSemantic.Copy)]
		YMARatingAppearance RatingAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable sponsoredAppearance;
		[NullAllowed, Export("sponsoredAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance SponsoredAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable titleAppearance;
		[NullAllowed, Export("titleAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance TitleAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable reviewCountAppearance;
		[NullAllowed, Export("reviewCountAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance ReviewCountAppearance { get; }

		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nullable warningAppearance;
		[NullAllowed, Export("warningAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance WarningAppearance { get; }

		// +(instancetype _Nonnull)defaultAppearance;
		[Static]
		[Export("defaultAppearance")]
		YMANativeTemplateAppearance DefaultAppearance();
	}

	// @interface YMAMutableNativeTemplateAppearance : YMANativeTemplateAppearance
	[BaseType(typeof(YMANativeTemplateAppearance))]
	interface YMAMutableNativeTemplateAppearance
	{
		// @property (assign, nonatomic) CGFloat borderWidth;
		[Export("borderWidth")]
		nfloat BorderWidth { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull borderColor;
		[Export("borderColor", ArgumentSemantic.Strong)]
		UIColor BorderColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
		[Export("backgroundColor", ArgumentSemantic.Strong)]
		UIColor BackgroundColor { get; set; }

		// @property (assign, nonatomic) YMAHorizontalOffset contentPadding;
		[Export("contentPadding", ArgumentSemantic.Assign)]
		YMAHorizontalOffset ContentPadding { get; set; }

		// @property (assign, nonatomic) YMAHorizontalOffset imageMargins;
		[Export("imageMargins", ArgumentSemantic.Assign)]
		YMAHorizontalOffset ImageMargins { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable ageAppearance;
		[NullAllowed, Export("ageAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance AgeAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable bodyAppearance;
		[NullAllowed, Export("bodyAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance BodyAppearance { get; set; }

		// @property (copy, nonatomic) YMAButtonAppearance * _Nullable callToActionAppearance;
		[NullAllowed, Export("callToActionAppearance", ArgumentSemantic.Copy)]
		YMAButtonAppearance CallToActionAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable domainAppearance;
		[NullAllowed, Export("domainAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance DomainAppearance { get; set; }

		// @property (copy, nonatomic) YMAImageAppearance * _Nullable faviconAppearance;
		[NullAllowed, Export("faviconAppearance", ArgumentSemantic.Copy)]
		YMAImageAppearance FaviconAppearance { get; set; }

		// @property (copy, nonatomic) YMAImageAppearance * _Nullable imageAppearance;
		[NullAllowed, Export("imageAppearance", ArgumentSemantic.Copy)]
		YMAImageAppearance ImageAppearance { get; set; }

		// @property (copy, nonatomic) YMARatingAppearance * _Nullable ratingAppearance;
		[NullAllowed, Export("ratingAppearance", ArgumentSemantic.Copy)]
		YMARatingAppearance RatingAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable sponsoredAppearance;
		[NullAllowed, Export("sponsoredAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance SponsoredAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable titleAppearance;
		[NullAllowed, Export("titleAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance TitleAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable reviewCountAppearance;
		[NullAllowed, Export("reviewCountAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance ReviewCountAppearance { get; set; }

		// @property (copy, nonatomic) YMALabelAppearance * _Nullable warningAppearance;
		[NullAllowed, Export("warningAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance WarningAppearance { get; set; }
	}

	// @interface YMALabelAppearance : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMALabelAppearance : INSCopying, INSMutableCopying
	{
		// @property (readonly, nonatomic, strong) UIFont * _Nonnull font;
		[Export("font", ArgumentSemantic.Strong)]
		UIFont Font { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull textColor;
		[Export("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; }

		// +(instancetype _Nonnull)appearanceWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor;
		[Static]
		[Export("appearanceWithFont:textColor:")]
		YMALabelAppearance AppearanceWithFont(UIFont font, UIColor textColor);
	}

	// @interface YMAMutableLabelAppearance : YMALabelAppearance
	[BaseType(typeof(YMALabelAppearance))]
	interface YMAMutableLabelAppearance
	{
		// @property (nonatomic, strong) UIFont * _Nonnull font;
		[Export("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull textColor;
		[Export("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; set; }
	}

	// @interface YMAButtonAppearance : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMAButtonAppearance : INSCopying, INSMutableCopying
	{
		// @property (readonly, copy, nonatomic) YMALabelAppearance * _Nonnull textAppearance;
		[Export("textAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance TextAppearance { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull highlightedTextColor;
		[Export("highlightedTextColor", ArgumentSemantic.Strong)]
		UIColor HighlightedTextColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull normalColor;
		[Export("normalColor", ArgumentSemantic.Strong)]
		UIColor NormalColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull highlightedColor;
		[Export("highlightedColor", ArgumentSemantic.Strong)]
		UIColor HighlightedColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull borderColor;
		[Export("borderColor", ArgumentSemantic.Strong)]
		UIColor BorderColor { get; }

		// @property (readonly, assign, nonatomic) CGFloat borderWidth;
		[Export("borderWidth")]
		nfloat BorderWidth { get; }

		// +(instancetype _Nonnull)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
		[Static]
		[Export("appearanceWithTextAppearance:normalColor:highlightedColor:borderColor:borderWidth:")]
		YMAButtonAppearance AppearanceWithTextAppearance(YMALabelAppearance textAppearance, UIColor normalColor, UIColor highlightedColor, UIColor borderColor, nfloat borderWidth);

		// +(instancetype _Nonnull)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
		[Static]
		[Export("appearanceWithTextAppearance:highlightedTextColor:normalColor:highlightedColor:borderColor:borderWidth:")]
		YMAButtonAppearance AppearanceWithTextAppearance(YMALabelAppearance textAppearance, UIColor highlightedTextColor, UIColor normalColor, UIColor highlightedColor, UIColor borderColor, nfloat borderWidth);
	}

	// @interface YMAMutableButtonAppearance : YMAButtonAppearance
	[BaseType(typeof(YMAButtonAppearance))]
	interface YMAMutableButtonAppearance
	{
		// @property (copy, nonatomic) YMALabelAppearance * _Nonnull textAppearance;
		[Export("textAppearance", ArgumentSemantic.Copy)]
		YMALabelAppearance TextAppearance { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull highlightedTextColor;
		[Export("highlightedTextColor", ArgumentSemantic.Strong)]
		UIColor HighlightedTextColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull normalColor;
		[Export("normalColor", ArgumentSemantic.Strong)]
		UIColor NormalColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
		[Export("highlightedColor", ArgumentSemantic.Strong)]
		UIColor HighlightedColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull borderColor;
		[Export("borderColor", ArgumentSemantic.Strong)]
		UIColor BorderColor { get; set; }

		// @property (assign, nonatomic) CGFloat borderWidth;
		[Export("borderWidth")]
		nfloat BorderWidth { get; set; }
	}

	// @interface YMARatingAppearance : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMARatingAppearance : INSCopying, INSMutableCopying
	{
		// @property (readonly, nonatomic, strong) UIColor * _Nonnull emptyStarColor;
		[Export("emptyStarColor", ArgumentSemantic.Strong)]
		UIColor EmptyStarColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull filledStarColor;
		[Export("filledStarColor", ArgumentSemantic.Strong)]
		UIColor FilledStarColor { get; }

		// @property (readonly, assign, nonatomic) CGFloat preferredStarSize;
		[Export("preferredStarSize")]
		nfloat PreferredStarSize { get; }

		// +(instancetype _Nonnull)appearanceWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize;
		[Static]
		[Export("appearanceWithEmptyStarColor:filledStarColor:starSize:")]
		YMARatingAppearance AppearanceWithEmptyStarColor(UIColor emptyStarColor, UIColor filledStarColor, nfloat starSize);
	}

	// @interface YMAMutableRatingAppearance : YMARatingAppearance
	[BaseType(typeof(YMARatingAppearance))]
	interface YMAMutableRatingAppearance
	{
		// @property (nonatomic, strong) UIColor * _Nonnull emptyStarColor;
		[Export("emptyStarColor", ArgumentSemantic.Strong)]
		UIColor EmptyStarColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nonnull filledStarColor;
		[Export("filledStarColor", ArgumentSemantic.Strong)]
		UIColor FilledStarColor { get; set; }

		// @property (assign, nonatomic) CGFloat preferredStarSize;
		[Export("preferredStarSize")]
		nfloat PreferredStarSize { get; set; }
	}

	// @interface YMAImageAppearance : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMAImageAppearance : INSCopying, INSMutableCopying
	{
		// @property (readonly, nonatomic, strong) YMASizeConstraint * _Nonnull widthConstraint;
		[Export("widthConstraint", ArgumentSemantic.Strong)]
		YMASizeConstraint WidthConstraint { get; }

		// +(instancetype _Nonnull)appearanceWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint;
		[Static]
		[Export("appearanceWithWidthConstraint:")]
		YMAImageAppearance AppearanceWithWidthConstraint(YMASizeConstraint widthConstraint);
	}

	// @interface YMAMutableImageAppearance : YMAImageAppearance
	[BaseType(typeof(YMAImageAppearance))]
	interface YMAMutableImageAppearance
	{
		// @property (nonatomic, strong) YMASizeConstraint * _Nonnull widthConstraint;
		[Export("widthConstraint", ArgumentSemantic.Strong)]
		YMASizeConstraint WidthConstraint { get; set; }
	}

	// @interface YMASizeConstraint : NSObject <NSCopying, NSMutableCopying>
	[BaseType(typeof(NSObject))]
	interface YMASizeConstraint : INSCopying, INSMutableCopying
	{
		// @property (readonly, assign, nonatomic) YMASizeConstraintType type;
		[Export("type", ArgumentSemantic.Assign)]
		YMASizeConstraintType Type { get; }

		// @property (readonly, assign, nonatomic) CGFloat value;
		[Export("value")]
		nfloat Value { get; }

		// +(instancetype _Nonnull)constraintWithType:(YMASizeConstraintType)type value:(CGFloat)value;
		[Static]
		[Export("constraintWithType:value:")]
		YMASizeConstraint ConstraintWithType(YMASizeConstraintType type, nfloat value);
	}

	// @interface YMAMutableSizeConstraint : YMASizeConstraint
	[BaseType(typeof(YMASizeConstraint))]
	interface YMAMutableSizeConstraint
	{
		// @property (assign, nonatomic) YMASizeConstraintType type;
		[Export("type", ArgumentSemantic.Assign)]
		YMASizeConstraintType Type { get; set; }

		// @property (assign, nonatomic) CGFloat value;
		[Export("value")]
		nfloat Value { get; set; }
	}

	// @interface YMANativeAdImage : NSObject
	[BaseType(typeof(NSObject))]
	interface YMANativeAdImage
	{
		// @property (readonly, assign, nonatomic) CGSize size;
		[Export("size", ArgumentSemantic.Assign)]
		CGSize Size { get; }

		// @property (readonly, nonatomic, strong) UIImage * _Nullable imageValue;
		[NullAllowed, Export("imageValue", ArgumentSemantic.Strong)]
		UIImage ImageValue { get; }
	}

	// @interface YMANativeAdAssets : NSObject
	[BaseType(typeof(NSObject))]
	interface YMANativeAdAssets
	{
		// @property (copy, nonatomic) NSString * _Nullable age;
		[NullAllowed, Export("age")]
		string Age { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable body;
		[NullAllowed, Export("body")]
		string Body { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable callToAction;
		[NullAllowed, Export("callToAction")]
		string CallToAction { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable domain;
		[NullAllowed, Export("domain")]
		string Domain { get; set; }

		// @property (nonatomic, strong) YMANativeAdImage * _Nullable favicon;
		[NullAllowed, Export("favicon", ArgumentSemantic.Strong)]
		YMANativeAdImage Favicon { get; set; }

		// @property (assign, nonatomic) BOOL feedbackAvailable;
		[Export("feedbackAvailable")]
		bool FeedbackAvailable { get; set; }

		// @property (nonatomic, strong) YMANativeAdImage * _Nullable icon;
		[NullAllowed, Export("icon", ArgumentSemantic.Strong)]
		YMANativeAdImage Icon { get; set; }

		// @property (nonatomic, strong) YMANativeAdImage * _Nullable image;
		[NullAllowed, Export("image", ArgumentSemantic.Strong)]
		YMANativeAdImage Image { get; set; }

		// @property (nonatomic, strong) YMANativeAdMedia * _Nullable media;
		[NullAllowed, Export("media", ArgumentSemantic.Strong)]
		YMANativeAdMedia Media { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable price;
		[NullAllowed, Export("price")]
		string Price { get; set; }

		// @property (nonatomic, strong) NSNumber * _Nullable rating;
		[NullAllowed, Export("rating", ArgumentSemantic.Strong)]
		NSNumber Rating { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable reviewCount;
		[NullAllowed, Export("reviewCount")]
		string ReviewCount { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable sponsored;
		[NullAllowed, Export("sponsored")]
		string Sponsored { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable warning;
		[NullAllowed, Export("warning")]
		string Warning { get; set; }
	}

	// @interface YMANativeMediaView : UIView
	[BaseType(typeof(UIView))]
	interface YMANativeMediaView
	{
	}

	// @interface YMAVASTSkipOffset : NSObject
	[BaseType(typeof(NSObject))]
	[DisableDefaultCtor]
	interface YMAVASTSkipOffset
	{
		// @property (readonly, copy, nonatomic) NSString * rawValue;
		[Export("rawValue")]
		string RawValue { get; }
	}
}